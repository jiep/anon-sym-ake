on: [push]

name: rust

jobs:
  build_and_test:
    name: Build binary, test, and check format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Check code
        run: cargo check

      - name: Check tests
        run: cargo test
      
      - name: Check format
        run: cargo fmt --all -- --check

      - name: Check Clippy
        run: cargo clippy -- -D warnings

  deploy:
    name: Create release cross-compiling binaries
    needs: build_and_test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    strategy: 
      matrix:
        target: [
          x86_64-pc-windows-gnu,
          x86_64-unknown-linux-gnu,
          # x86_64-apple-darwin # Disable Mac OS
        ]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install dependencies for Windows target
        if: ${{ contains(matrix.target, 'windows') }}
        run: |
          sudo apt-get install -y gcc-mingw-w64

      - name: Install dependencies for Mac OS target
        if: ${{ contains(matrix.target, 'darwin') }}
        uses: mbround18/setup-osxcross@v1
        with:
          osx-version: "12.3"

      - name: Build target
        if: ${{ contains(matrix.target, 'darwin') }}
        run: |
          export CC=o64-clang
          export CXX=o64-clang++
          cargo build --release --target ${{ matrix.target }}

      - name: Build target
        if: ${{ !contains(matrix.target, 'darwin') }}
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package all targets
        shell: bash
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          sudo apt install -y zip
          BIN=anon-sym-ake
          BIN_NAME=$BIN
          TARGET=${{ matrix.target }}
          if [[ ${TARGET} == *"windows"* ]]; then
            BIN_NAME=${BIN}.exe
          fi
          strip target/${TARGET}/release/${BIN_NAME}
          cd target/${TARGET}/release
          sha256sum ${BIN_NAME} | cut -f 1 -d " " > digest.sha256
          zip ../../../${BIN}-${TARGET}.zip ${BIN_NAME} digest.sha256
          cd -
      - name: Add to Releases
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
            files: '*.zip'
            generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  benchmark: 
    name: Run benchmark
    if: startsWith(github.ref, 'refs/tags/')
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Run benchmark
        run: | 
          cargo criterion --message-format=json | criterion-table > BENCHMARKS.md
          mv BENCHMARKS.md target/criterion/

      - name: Package results
        shell: bash
        run: |
          sudo apt install -y zip
          BIN=anon-sym-ake
          zip -r benchmark-linux.zip target/criterion/*

      - name: Add to Releases
        uses: softprops/action-gh-release@v1
        with:
            files: '*.zip'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}